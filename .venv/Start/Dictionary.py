int:

int.bit_length(): Повертає кількість бітів, необхідних для представлення цілого числа.
int.to_bytes(length, byteorder, signed): Перетворює ціле число в байтовий рядок.
int.from_bytes(bytes, byteorder, signed): Перетворює байтовий рядок на ціле число.
int.__str__(): Повертає рядкове представлення цілого числа.
int.__abs__(): Повертає абсолютне значення цілого числа.
int.__pow__(other[, modulo]): Підносить ціле число до степеня.
int.__divmod__(other): Повертає результат ділення і остачу від ділення двох цілих чисел.

float:

float.is_integer(): Перевіряє, чи є число цілим.
float.as_integer_ratio(): Повертає чисельник і знаменник дробового числа у вигляді цілих чисел.
float.hex(): Повертає рядок, який представляє число у шістнадцятковому форматі з плаваючою комою.
float.__add__(self, other): Додає два числа разом.
float.__sub__(self, other): Віднімає одне число від іншого.
float.__mul__(self, other): Помножує два числа.
float.__truediv__(self, other): Виконує ділення двох чисел, повертаючи результат як число з плаваючою комою.
float.__str__(): Повертає рядкове представлення числа з плаваючою комою.
float.__abs__(): Повертає абсолютне значення числа з плаваючою комою.
float.__pow__(other[, modulo]): Підносить число з плаваючою комою до степеня.
float.__round__([ndigits]): Округлює число з плаваючою комою до вказаної кількості знаків після коми.

list:

list.append(item): Додає елемент до кінця списку.
list.extend(iterable): Розширює список, додаючи елементи з ітерованого об'єкта.
list.pop(index): Видаляє та повертає елемент за вказаним індексом.
list.insert(index, item): Вставляє елемент на позицію з вказаним індексом.
list.remove(item): Видаляє перше входження елемента зі списку.
list.sort(): Сортує список за зростанням.
list.reverse(): Змінює порядок елементів у списку на зворотний.
list.index(item[, start[, end]]): Повертає індекс першого входження елемента у списку.
list.count(item): Повертає кількість входжень елемента у список.
list.clear(): Видаляє всі елементи зі списку.
list.copy(): Повертає копію списку.

str:

str.upper(): Повертає рядок у верхньому регістрі.
str.lower(): Повертає рядок у нижньому регістрі.
str.replace(old, new): Замінює всі входження підрядка old на new у рядку.
str.strip(): Повертає копію рядка без початкових та кінцевих пробілів.
str.split(sep): Розбиває рядок на підстроки за роздільником sep і повертає список.
str.startswith(prefix): Перевіряє, чи починається рядок з підрядка prefix.
str.endswith(suffix): Перевіряє, чи закінчується рядок підрядком suffix.
str.join(iterable): Повертає рядок, який є об'єднанням елементів ітерованого об'єкта.
str.capitalize(): Повертає рядок, в якому перший символ перетворено на верхній регістр, а решта на нижній.
str.isalpha(): Перевіряє, чи міститься лише літери у рядку.
str.splitlines(): Розбиває рядок на список рядків, використовуючи символи нового рядка як роздільник.

dict:

dict.get(key, default): Повертає значення, пов'язане з ключем key. Якщо ключа немає, повертає default.
dict.popitem(): Видаляє та повертає останню пару ключ-значення зі словника.
dict.update(other_dict): Оновлює словник, додаючи пари ключ-значення з іншого словника other_dict.
dict.clear(): Видаляє всі пари ключ-значення зі словника.
dict.keys(): Повертає список ключів словника.
dict.values(): Повертає список значень словника.
dict.items(): Повертає список кортежів (ключ, значення) для кожної пари ключ-значення у словнику.
dict.setdefault(key, default): Повертає значення, пов'язане з ключем key. Якщо ключа немає, додає його зі значенням default.

set:

set.add(item): Додає елемент до множини.
set.remove(item): Видаляє елемент з множини. Викликає помилку, якщо елемент не знайдено.
set.discard(item): Видаляє елемент з множини, якщо він присутній. Якщо елемент відсутній, не викликає помилку.
set.pop(): Видаляє та повертає довільний елемент з множини.
set.union(other_set): Повертає об'єднання двох множин.
set.difference(other_set): Повертає різницю між поточною множиною та other_set.
set.intersection(other_set): Повертає спільні елементи між поточною множиною та other_set.
set.symmetric_difference(other_set): Повертає симетричну різницю між двома множинами.

tuple:

tuple.count(item): Повертає кількість входжень item у кортеж.
tuple.index(item): Повертає індекс першого входження item у кортежі.
tuple.__add__(other): Конкатенує два кортежі разом.
tuple.__mul__(n): Повертає кортеж, який є результатом повторення кортежа n разів.
tuple.__contains__(item): Перевіряє, чи міститься елемент item у кортежі.
tuple.__eq__(other): Перевіряє рівність двох кортежів.

def total_expenses_by_categories(file_name: str):
    result = {}
    with open(file_name, 'r', encoding='utf-8'):
        ...
    return result
